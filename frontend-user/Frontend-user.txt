import React, { useState, useEffect } from 'react';
import axios from 'axios';

const API = 'https://yieldnest.onrender.com';

function App() {
  const [token, setToken] = useState('');
  const [profile, setProfile] = useState(null);
  const [form, setForm] = useState({ name: '', email: '', password: '' });
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [isRegister, setIsRegister] = useState(false);

  const login = async () => {
    try {
      const res = await axios.post(`${API}/auth/login`, {
        email: form.email,
        password: form.password,
      });
      setToken(res.data.token);
      setIsLoggedIn(true);
    } catch (err) {
      alert('Login failed');
    }
  };

  const register = async () => {
    try {
      await axios.post(`${API}/auth/register`, form);
      alert('Registration successful. You can now log in.');
      setIsRegister(false);
    } catch (err) {
      alert('Registration failed');
    }
  };

  const getProfile = async () => {
    try {
      const res = await axios.get(`${API}/user/profile`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProfile(res.data);
    } catch (err) {
      alert('Failed to fetch profile');
    }
  };

  useEffect(() => {
    if (token) getProfile();
  }, [token]);

  if (!isLoggedIn) {
    return (
      <div className="p-6 max-w-md mx-auto mt-20 border rounded shadow">
        <h1 className="text-2xl font-bold mb-4">
          {isRegister ? 'Register for YieldNest' : 'YieldNest Login'}
        </h1>

        {isRegister && (
          <input
            type="text"
            placeholder="Name"
            className="border p-2 mb-2 w-full"
            value={form.name}
            onChange={(e) => setForm({ ...form, name: e.target.value })}
          />
        )}

        <input
          type="email"
          placeholder="Email"
          className="border p-2 mb-2 w-full"
          value={form.email}
          onChange={(e) => setForm({ ...form, email: e.target.value })}
        />
        <input
          type="password"
          placeholder="Password"
          className="border p-2 mb-4 w-full"
          value={form.password}
          onChange={(e) => setForm({ ...form, password: e.target.value })}
        />

        <button
          className="bg-blue-500 text-white px-4 py-2 rounded w-full mb-2"
          onClick={isRegister ? register : login}
        >
          {isRegister ? 'Register' : 'Login'}
        </button>

        <p className="text-sm text-center">
          {isRegister ? 'Already have an account?' : "Don't have an account?"}
          <button
            onClick={() => setIsRegister(!isRegister)}
            className="ml-1 text-blue-600 underline"
          >
            {isRegister ? 'Login here' : 'Register here'}
          </button>
        </p>
      </div>
    );
  }

  return (
    <div className="p-6 max-w-md mx-auto mt-20 border rounded shadow">
      <h1 className="text-2xl font-bold mb-4">Welcome to YieldNest</h1>
      {profile ? (
        <div>
          <p><strong>Name:</strong> {profile.name}</p>
          <p><strong>Email:</strong> {profile.email}</p>
          <p><strong>Balance:</strong> ${profile.balance.toFixed(2)}</p>
        </div>
      ) : (
        <p>Loading profile...</p>
      )}
    </div>
  );
}

export default App;
